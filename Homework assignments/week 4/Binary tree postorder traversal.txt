/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
    List<Integer> res = new ArrayList<>();
    if (root == null) {
        return res;
    }
	
    Stack<TreeNode> stack = new Stack<>();
    TreeNode h = root;
    stack.push(h);
    TreeNode c = null;
    
    while (!stack.isEmpty()) {
         c = stack.peek();
         if (c.left != null && h != c.left && h != c.right) {
             stack.push(c.left);
         } else if (c.right != null && h != c.right){
             stack.push(c.right);
         } else {
             res.add(stack.pop().val);
             h = c;   
         }
    }
    return res;
}
}