class Solution {
public int[] topKFrequent(int[] nums, int k) {
int []ans =new int[k];
HashMap<Integer,Integer> map=new HashMap<Integer,Integer>();
for(int i=0;i<nums.length;i++)
{
map.put(nums[i],map.getOrDefault(nums[i],0)+1);
}
List<Map.Entry<Integer,Integer>> list=new LinkedList<Map.Entry<Integer,Integer>>(map.entrySet());
Collections.sort(list,
new Comparator<Map.Entry<Integer,Integer>>()
{
public int compare(Map.Entry<Integer,Integer> object1,Map.Entry<Integer,Integer>object2){
return object2.getValue().compareTo(object1.getValue());
}
});
int j=0;
for(Map.Entry<Integer,Integer> i:list)
{
if(j>=k)
break;
ans[j++]=i.getKey();
}
return ans;
}
}